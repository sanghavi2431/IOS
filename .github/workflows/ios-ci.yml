name: iOS Build CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: macos-latest

    steps:
    # Step 1: Checkout repository
    - name: Checkout repository
      uses: actions/checkout@v3

    # Step 2: List available Xcode versions
    - name: List available Xcode versions
      run: ls /Applications/ | grep Xcode

    # Step 3: Set Xcode version
    - name: Set Xcode version
      run: |
        xcode_version="16.1" # Specify the desired version
        sudo xcode-select --switch /Applications/Xcode_$xcode_version.app || exit 1
        xcodebuild -version

    # Step 4: Install Ruby, CocoaPods, and xcpretty
    - name: Install Ruby, CocoaPods, and xcpretty
      run: |
        ruby_version="3.2"
        cocoapods_version="1.16.2"
        # Install Ruby
        brew install ruby@$ruby_version || exit 1
        export PATH="/opt/homebrew/opt/ruby@$ruby_version/bin:$PATH"
        # Install CocoaPods
        gem install cocoapods -v $cocoapods_version || exit 1
        # Install xcpretty
        gem install xcpretty || exit 1
        # Verify installations
        ruby -v
        pod --version
        xcpretty --version
      shell: bash

    # Step 5: Clean CocoaPods cache
    - name: Clean CocoaPods cache
      run: pod cache clean --all

    # Step 6: Install CocoaPods dependencies
    - name: Install CocoaPods dependencies
      run: |
        pod install --verbose || exit 1
      working-directory: ./  # Adjust if necessary

    # Step 7: Build project
    - name: Build project
      run: |
        xcodebuild -workspace Woloo.xcworkspace -scheme Woloo -sdk iphonesimulator \
          -destination 'platform=iOS Simulator,name=iPhone 13' build || exit 1

    # Step 8: Run unit tests and generate JUnit report
    - name: Run unit tests and generate JUnit report
      run: |
        mkdir -p junit-reports
        xcodebuild -workspace Woloo.xcworkspace -scheme Woloo -sdk iphonesimulator \
          -destination 'platform=iOS Simulator,name=iPhone 13' test | \
          tee junit-reports/result.log | xcpretty -r junit --output junit-reports/test-results.xml || exit 1
